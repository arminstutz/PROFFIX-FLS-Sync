// ------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:4.0.30319.42000
// 
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;

namespace FlsGliderSync.My
{
    [System.Runtime.CompilerServices.CompilerGenerated()]
    [System.CodeDom.Compiler.GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.10.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    internal sealed partial class MySettings : System.Configuration.ApplicationSettingsBase
    {
        private static MySettings defaultInstance = (MySettings)Synchronized(new MySettings());

        #region My.Settings Auto-Save Functionality
        /* TODO ERROR: Skipped IfDirectiveTrivia
        #If _MyType = "WindowsForms" Then
        */
        private static bool addedHandler;
        private static object addedHandlerLockObject = new object();

        [DebuggerNonUserCode()]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        private static void AutoSaveSettings(object sender, EventArgs e)
        {
            if (MyProject.Application.SaveMySettingsOnExit)
            {
                MySettingsProperty.Settings.Save();
            }
        }
        /* TODO ERROR: Skipped EndIfDirectiveTrivia
        #End If
        */
        #endregion

        public static MySettings Default
        {
            get
            {

                /* TODO ERROR: Skipped IfDirectiveTrivia
                #If _MyType = "WindowsForms" Then
                */
                if (!addedHandler)
                {
                    lock (addedHandlerLockObject)
                    {
                        if (!addedHandler)
                        {
                            MyProject.Application.Shutdown += AutoSaveSettings;
                            addedHandler = true;
                        }
                    }
                }
                /* TODO ERROR: Skipped EndIfDirectiveTrivia
                #End If
                */
                return defaultInstance;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("szik5fzsEWA=")]
        public string Password
        {
            get
            {
                return Conversions.ToString(this["Password"]);
            }

            set
            {
                this["Password"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("")]
        public string Username
        {
            get
            {
                return Conversions.ToString(this["Username"]);
            }

            set
            {
                this["Username"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("smc%espo$")]
        public string Crypto
        {
            get
            {
                return Conversions.ToString(this["Crypto"]);
            }

            set
            {
                this["Crypto"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/Token")]
        public string ServiceAPITokenMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPITokenMethod"]);
            }

            set
            {
                this["ServiceAPITokenMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/persons/")]
        public string ServiceAPIPersonMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIPersonMethod"]);
            }

            set
            {
                this["ServiceAPIPersonMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/deliveries/notprocessed")]
        public string ServiceAPIDeliveriesNotProcessedMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIDeliveriesNotProcessedMethod"]);
            }

            set
            {
                this["ServiceAPIDeliveriesNotProcessedMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/persons/fulldetails/deleted/")]
        public string ServiceAPIDeletedPersonFulldetailsMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIDeletedPersonFulldetailsMethod"]);
            }

            set
            {
                this["ServiceAPIDeletedPersonFulldetailsMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/persons/fulldetails/modified/")]
        public string ServiceAPIModifiedPersonFullDetailsMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIModifiedPersonFullDetailsMethod"]);
            }

            set
            {
                this["ServiceAPIModifiedPersonFullDetailsMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("False")]
        public bool ShowSameFields
        {
            get
            {
                return Conversions.ToBoolean(this["ShowSameFields"]);
            }

            set
            {
                this["ShowSameFields"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/countries/overview")]
        public string ServiceAPICountriesMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPICountriesMethod"]);
            }

            set
            {
                this["ServiceAPICountriesMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/articles/")]
        public string ServiceAPIArticlesMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIArticlesMethod"]);
            }

            set
            {
                this["ServiceAPIArticlesMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/persons/membernumber/")]
        public string ServiceAPIPersonsMemberNrMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIPersonsMemberNrMethod"]);
            }

            set
            {
                this["ServiceAPIPersonsMemberNrMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/memberstates")]
        public string ServiceAPIMemberStates
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIMemberStates"]);
            }

            set
            {
                this["ServiceAPIMemberStates"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/deliveries/delivered")]
        public string ServiceAPIDeliveredMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIDeliveredMethod"]);
            }

            set
            {
                this["ServiceAPIDeliveredMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/flights/exchange/modified/")]
        public string ServiceAPIModifiedFlightsMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIModifiedFlightsMethod"]);
            }

            set
            {
                this["ServiceAPIModifiedFlightsMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/aircrafts/overview")]
        public string ServiceAPIAircraftsMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPIAircraftsMethod"]);
            }

            set
            {
                this["ServiceAPIAircraftsMethod"] = value;
            }
        }

        [System.Configuration.UserScopedSetting()]
        [DebuggerNonUserCode()]
        [System.Configuration.DefaultSettingValue("https://test.glider-fls.ch/api/v1/locations/overview")]
        public string ServiceAPILocationsMethod
        {
            get
            {
                return Conversions.ToString(this["ServiceAPILocationsMethod"]);
            }

            set
            {
                this["ServiceAPILocationsMethod"] = value;
            }
        }
    }
}

namespace FlsGliderSync.My
{
    [HideModuleName()]
    [DebuggerNonUserCode()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    internal static class MySettingsProperty
    {
        [System.ComponentModel.Design.HelpKeyword("My.Settings")]
        internal static MySettings Settings
        {
            get
            {
                return MySettings.Default;
            }
        }
    }
}